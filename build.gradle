group 'dvachparser'
version '1.0-SNAPSHOT'
apply plugin: 'java'
sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
    test {
        java {
            srcDir 'test'
        }
    }
}
jar {
    manifest {
        attributes 'Main-Class': 'com.fomenko.webmplayer.ConsoleMap'
    }
}
compileJava.options.encoding = 'UTF-8'
sourceCompatibility = 1.8
repositories {
    mavenCentral()
}
dependencies {
    // https://mvnrepository.com/artifact/uk.co.caprica/vlcj
    compile group: 'uk.co.caprica', name: 'vlcj', version: '3.10.1'

// https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.10.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.10.0'
    compile 'org.jsoup:jsoup:1.11.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
task execute(type:JavaExec) {
    main = 'com.fomenko.webmplayer.Test'
    classpath = sourceSets.main.runtimeClasspath
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'com.fomenko.webmplayer.ConsoleMap'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}